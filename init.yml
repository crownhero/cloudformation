Parameters:
  NameOfService:
    Type: String
    Description: "Name of service this stack should be used for"
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.medium
      - t2.small
      - m1.small
      - m1.large
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.
  KeyName:
    Description: For EC2 login
    Type: AWS::EC2::KeyPair::KeyName

Mappings: 
  AMIRegionMap: 
    us-east-1: 
      AMI: "ami-0ff8a91507f77f867"
    us-west-1: 
      AMI: "ami-0bdb828fd58c52235"
    eu-west-2: 
      AMI: "ami-0500f74cc2b89fb6b" #correct
    ap-southeast-1: 
      AMI: "ami-08569b978cc4dfa10"
    ap-northeast-1: 
      AMI: "ami-06cd52961ce9f0d85"

Resources:
  WebServer:
    Type: AWS::EC2::Instance
    Metadata: 
      AWS::CloudFormation::Init: 
        config:
          packages:
            yum:
              httpd: []
              wget: []
              git: []
              unzip: []
          commands:
            test:
              # command: "wget https://www.tooplate.com/download/2131_wedding_lite.zip && unzip 2131_wedding_lite.zip && cp -r 2131_wedding_lite/* /var/www/html/"
              command: "wget https://www.tooplate.com/zip-templates/2131_wedding_lite.zip && unzip 2131_wedding_lite.zip && cp -r 2131_wedding_lite/* /var/www/html/"
          files:
            /var/www/html/hello.html:
              content: !Sub |
                <!DOCTYPE html>
                <html>
                <body>

                <h1>Welcome to cloudformation</h1>
                <p> This stack was deployed by cloud formation.</p>
                </html>
                </body>
          services: 
            sysvinit:
              httpd: 
                enabled: true
                ensureRunning: true

    Properties:
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AMIRegionMap
        - !Ref AWS::Region
        - AMI
      Tags:
        - Key: "Name"
          Value: !Ref NameOfService
      SecurityGroups:
        - !Ref KprojSG
      UserData:
        'Fn::Base64':
          !Sub |
              #!/bin/bash -xe
              # Ensure bootstrap is latest
              yum install -y aws-cfn-bootstrap
              #install the files and packages from the metadata
              /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource WebServer --region ${AWS::Region}
              /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WebServer --region ${AWS::Region}

  KprojSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http and ssh connection
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

Outputs:
  PrintSomeInfo:
    Value: !GetAtt
      - WebServer
      - PublicDnsName